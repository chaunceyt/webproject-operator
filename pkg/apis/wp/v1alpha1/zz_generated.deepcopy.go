// +build !ignore_autogenerated

/*
Copyright 2020.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by operator-sdk-v0.15.2. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProject) DeepCopyInto(out *WebProject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProject.
func (in *WebProject) DeepCopy() *WebProject {
	if in == nil {
		return nil
	}
	out := new(WebProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebProject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectBackup) DeepCopyInto(out *WebProjectBackup) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectBackup.
func (in *WebProjectBackup) DeepCopy() *WebProjectBackup {
	if in == nil {
		return nil
	}
	out := new(WebProjectBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectCLISidecar) DeepCopyInto(out *WebProjectCLISidecar) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectCLISidecar.
func (in *WebProjectCLISidecar) DeepCopy() *WebProjectCLISidecar {
	if in == nil {
		return nil
	}
	out := new(WebProjectCLISidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectCacheSidecar) DeepCopyInto(out *WebProjectCacheSidecar) {
	*out = *in
	out.CronJob = in.CronJob
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectCacheSidecar.
func (in *WebProjectCacheSidecar) DeepCopy() *WebProjectCacheSidecar {
	if in == nil {
		return nil
	}
	out := new(WebProjectCacheSidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectCronJob) DeepCopyInto(out *WebProjectCronJob) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectCronJob.
func (in *WebProjectCronJob) DeepCopy() *WebProjectCronJob {
	if in == nil {
		return nil
	}
	out := new(WebProjectCronJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectDatabaseSidecar) DeepCopyInto(out *WebProjectDatabaseSidecar) {
	*out = *in
	out.Backup = in.Backup
	out.CronJob = in.CronJob
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectDatabaseSidecar.
func (in *WebProjectDatabaseSidecar) DeepCopy() *WebProjectDatabaseSidecar {
	if in == nil {
		return nil
	}
	out := new(WebProjectDatabaseSidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectImagePullSecret) DeepCopyInto(out *WebProjectImagePullSecret) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectImagePullSecret.
func (in *WebProjectImagePullSecret) DeepCopy() *WebProjectImagePullSecret {
	if in == nil {
		return nil
	}
	out := new(WebProjectImagePullSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectList) DeepCopyInto(out *WebProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WebProject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectList.
func (in *WebProjectList) DeepCopy() *WebProjectList {
	if in == nil {
		return nil
	}
	out := new(WebProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectSearchSidecar) DeepCopyInto(out *WebProjectSearchSidecar) {
	*out = *in
	out.CronJob = in.CronJob
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectSearchSidecar.
func (in *WebProjectSearchSidecar) DeepCopy() *WebProjectSearchSidecar {
	if in == nil {
		return nil
	}
	out := new(WebProjectSearchSidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectSpec) DeepCopyInto(out *WebProjectSpec) {
	*out = *in
	out.Backup = in.Backup
	in.CLISidecar.DeepCopyInto(&out.CLISidecar)
	in.CacheSidecar.DeepCopyInto(&out.CacheSidecar)
	in.DatabaseSidecar.DeepCopyInto(&out.DatabaseSidecar)
	out.ImagePullSecrets = in.ImagePullSecrets
	if in.IngressHosts != nil {
		in, out := &in.IngressHosts, &out.IngressHosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeploymentAnnotations != nil {
		in, out := &in.DeploymentAnnotations, &out.DeploymentAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IngressAnnotations != nil {
		in, out := &in.IngressAnnotations, &out.IngressAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.SearchSidecar.DeepCopyInto(&out.SearchSidecar)
	in.WebContainer.DeepCopyInto(&out.WebContainer)
	if in.CommonConfig != nil {
		in, out := &in.CommonConfig, &out.CommonConfig
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectSpec.
func (in *WebProjectSpec) DeepCopy() *WebProjectSpec {
	if in == nil {
		return nil
	}
	out := new(WebProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectStatus) DeepCopyInto(out *WebProjectStatus) {
	*out = *in
	if in.PodNames != nil {
		in, out := &in.PodNames, &out.PodNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConfigMapNames != nil {
		in, out := &in.ConfigMapNames, &out.ConfigMapNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecretNames != nil {
		in, out := &in.SecretNames, &out.SecretNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeploymentNames != nil {
		in, out := &in.DeploymentNames, &out.DeploymentNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CronJobNames != nil {
		in, out := &in.CronJobNames, &out.CronJobNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectStatus.
func (in *WebProjectStatus) DeepCopy() *WebProjectStatus {
	if in == nil {
		return nil
	}
	out := new(WebProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebProjectWebContainer) DeepCopyInto(out *WebProjectWebContainer) {
	*out = *in
	out.CronJob = in.CronJob
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebProjectWebContainer.
func (in *WebProjectWebContainer) DeepCopy() *WebProjectWebContainer {
	if in == nil {
		return nil
	}
	out := new(WebProjectWebContainer)
	in.DeepCopyInto(out)
	return out
}
